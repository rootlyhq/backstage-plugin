{"version":3,"file":"RootlyOverviewServiceCard.esm.js","sources":["../../../src/components/Entity/RootlyOverviewServiceCard.tsx"],"sourcesContent":["import { stringifyEntityRef } from '@backstage/catalog-model';\nimport {\n  HeaderIconLinkRow,\n  IconLinkVerticalProps,\n  Progress,\n} from '@backstage/core-components';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { FilterList } from '@material-ui/icons';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport { Alert } from '@material-ui/lab';\nimport { LineChart } from 'react-chartkick';\nimport { blue } from '@material-ui/core/colors';\nimport 'chartkick/chart.js';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport { useAsync } from 'react-use';\nimport { ColoredChip } from '../UI/ColoredChip';\nimport { StatusChip } from '../UI/StatusChip';\n\nimport {\n  ROOTLY_ANNOTATION_ORG_ID,\n  RootlyApi,\n  RootlyIncident,\n  RootlyService,\n} from '@rootly/backstage-plugin-common';\nimport { useRootlyClient } from '../../api';\n\nconst truncate = (input: string, length: number) =>\n  input.length > length ? `${input.substring(0, length)}...` : input;\n\nconst IncidentListItem = ({\n  incident,\n}: {\n  incident: RootlyIncident;\n  rootlyClient: RootlyApi;\n}) => {\n  return (\n    <ListItem dense key={incident.id} style={{ paddingLeft: 0 }}>\n      <ListItemText\n        primary={\n          <>\n            <Link\n              style={{ marginRight: 8 }}\n              target=\"blank\"\n              href={incident.attributes.url}\n            >\n              {truncate(incident.attributes.title, 100)}\n            </Link>\n            <ColoredChip\n              label={incident.attributes.severity?.data.attributes.name}\n              tooltip={\n                incident.attributes.severity?.data.attributes.description\n              }\n              color={incident.attributes.severity?.data.attributes.color}\n            />\n          </>\n        }\n        primaryTypographyProps={{\n          variant: 'body1',\n        }}\n        secondary={\n          <Typography noWrap variant=\"body2\" color=\"textSecondary\">\n            Created {moment(incident.attributes.created_at).fromNow()}\n          </Typography>\n        }\n      />\n      <ListItemSecondaryAction>\n        <StatusChip status={incident.attributes.status} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nconst getViewIncidentsForServiceLink = (\n  service: RootlyService,\n) => {\n  return {\n    label: 'View Incidents',\n    disabled: false,\n    icon: <FilterList />,\n    href: RootlyApi.getListIncidentsForServiceURL(service),\n  };\n};\n\n// function findApiKey(configs: Config[], organization: string | undefined) {\n//   // Loop through the configuration array\n//   for (let orgConfig of configs) {\n//     // If organization name is provided and matches, return the API key\n//     if (organization && orgConfig.organization === organization) {\n//       return orgConfig.apiKey;\n//     }\n//   }\n//   // If no organization name is provided, return the first API key found\n//   if (!organization && configs.length > 0) {\n//     return configs.apiKey;\n//   }\n//   // If no matching organization is found, return null or an error message\n//   return null;\n// }\n\nexport const RootlyOverviewServiceCard = () => {\n  const { entity } = useEntity();\n  const rootlyClient = useRootlyClient({organizationId: entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]});\n\n  const [reload, setReload] = useState(false);\n\n  const createIncidentLink: IconLinkVerticalProps = {\n    label: 'Create Incident',\n    disabled: false,\n    icon: <WhatshotIcon />,\n    href: RootlyApi.getCreateIncidentURL(),\n  };\n\n  const viewIncidentsLink: IconLinkVerticalProps = {\n    label: 'View All Incidents',\n    disabled: false,\n    icon: <WhatshotIcon />,\n    href: RootlyApi.getListIncidents(),\n  };\n\n  const entityTriplet = stringifyEntityRef({\n    namespace: entity.metadata.namespace,\n    kind: entity.kind,\n    name: entity.metadata.name,\n  });\n\n  const {\n    value: serviceResponse,\n    loading: serviceLoading,\n    error: serviceError,\n  } = useAsync(\n    async () =>\n      await rootlyClient.getServices({\n        filter: {\n          backstage_id: entityTriplet,\n        },\n      }),\n    [reload],\n  );\n\n  const service =\n    serviceResponse && serviceResponse.data && serviceResponse.data.length > 0\n      ? serviceResponse.data[0]\n      : null;\n\n  const {\n    value: incidentsResponse,\n    loading: incidentsLoading,\n    error: incidentsError,\n  } = useAsync(\n    async () =>\n      service\n        ? await rootlyClient.getIncidents({\n            filter: {\n              services: service.attributes.slug,\n              status: 'started,mitigated',\n            },\n          })\n        : { data: [] },\n    [service],\n  );\n\n  const {\n    value: chartResponse,\n    loading: chartLoading,\n    error: chartError,\n  } = useAsync(\n    async () =>\n      service\n        ? await rootlyClient.getServiceIncidentsChart(service, {\n            period: 'day',\n          })\n        : { data: [] },\n    [service],\n  );\n\n  const incidents =\n    incidentsResponse &&\n    incidentsResponse.data &&\n    incidentsResponse.data.length > 0\n      ? incidentsResponse.data\n      : null;\n\n  return (\n    <Card>\n      <CardHeader\n        title=\"Rootly\"\n        action={\n          <>\n            {service && (\n              <IconButton\n                component={Link}\n                aria-label=\"Refresh\"\n                disabled={false}\n                title=\"Refresh\"\n                onClick={() => setReload(!reload)}\n              >\n                <CachedIcon />\n              </IconButton>\n            )}\n          </>\n        }\n        subheader={\n          <HeaderIconLinkRow\n            links={\n              !serviceLoading && service\n                ? [\n                    createIncidentLink,\n                    getViewIncidentsForServiceLink(service),\n                    viewIncidentsLink,\n                  ]\n                : [createIncidentLink, viewIncidentsLink]\n            }\n          />\n        }\n      />\n      {service && (\n        <>\n          <Divider />\n          {!chartLoading && !chartError && chartResponse && (\n            <>\n              <CardContent>\n                <Typography variant=\"subtitle1\">\n                  Incidents over last 30 days\n                </Typography>\n                <LineChart\n                  data={chartResponse.data}\n                  height=\"150px\"\n                  colors={[blue[300]]}\n                />\n              </CardContent>\n              <Divider />\n            </>\n          )}\n        </>\n      )}\n      <CardContent>\n        {(serviceLoading || incidentsLoading) && <Progress />}\n        {serviceError && <Alert severity=\"error\">{serviceError.message}</Alert>}\n        {incidentsError && (\n          <Alert severity=\"error\">{incidentsError.message}</Alert>\n        )}\n        {!incidentsLoading &&\n          !incidentsError &&\n          !incidentsLoading &&\n          incidents && (\n            <>\n              {incidents && incidents.length >= 0 && (\n                <Typography variant=\"subtitle1\">\n                  There is <strong>{incidents.length}</strong> ongoing incidents\n                  for this service\n                </Typography>\n              )}\n              {incidents && incidents.length === 0 && (\n                <Typography variant=\"subtitle1\">\n                  No ongoing incidents\n                </Typography>\n              )}\n              <List dense>\n                {incidents &&\n                  incidents.map((incident: RootlyIncident) => (\n                    <IncidentListItem\n                      incident={incident}\n                      rootlyClient={rootlyClient}\n                    />\n                  ))}\n              </List>\n            </>\n          )}\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"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"}