{"version":3,"file":"index.esm.js","sources":["../../../src/components/Incident/index.ts"],"sourcesContent":["import { RootlyIncident, RootlyIncidentType, RootlyEnvironment, RootlyFunctionality, RootlyService, RootlyTeam } from '@rootly/backstage-plugin-common';\n\nexport class IncidentWrapper {\n  incident: RootlyIncident;\n  included: any;\n  constructor(incident: RootlyIncident, included: any) {\n    this.incident = incident;\n    this.included = included;\n  }\n\n  environments = (): RootlyEnvironment[] => {\n    if (this.incident.relationships?.environments?.data) {\n      const ids = this.incident.relationships?.environments?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'environments' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  services = (): RootlyService[] => {\n    if (this.incident.relationships?.services?.data) {\n      const ids = this.incident.relationships?.services?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'services' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  functionalities = (): RootlyFunctionality[] => {\n    if (this.incident.relationships?.functionalities?.data) {\n      const ids = this.incident.relationships?.functionalities?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'functionalities' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  groups = (): RootlyTeam[] => {\n    if (this.incident.relationships?.groups?.data) {\n      const ids = this.incident.relationships?.groups?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'groups' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  types = (): RootlyIncidentType[] => {\n    if (this.incident.relationships?.incident_types?.data) {\n      const ids = this.incident.relationships?.incident_types?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'incident_types' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n}\n"],"names":[],"mappings":"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"}