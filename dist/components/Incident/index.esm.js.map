{"version":3,"file":"index.esm.js","sources":["../../../src/components/Incident/index.ts"],"sourcesContent":["import { RootlyIncident, RootlyIncidentType, RootlyEnvironment, RootlyFunctionality, RootlyService, RootlyTeam } from '@rootly/backstage-plugin-common';\n\nexport class IncidentWrapper {\n  incident: RootlyIncident;\n  included: any;\n  constructor(incident: RootlyIncident, included: any) {\n    this.incident = incident;\n    this.included = included;\n  }\n\n  environments = (): RootlyEnvironment[] => {\n    if (this.incident.relationships?.environments?.data) {\n      const ids = this.incident.relationships?.environments?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'environments' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  services = (): RootlyService[] => {\n    if (this.incident.relationships?.services?.data) {\n      const ids = this.incident.relationships?.services?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'services' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  functionalities = (): RootlyFunctionality[] => {\n    if (this.incident.relationships?.functionalities?.data) {\n      const ids = this.incident.relationships?.functionalities?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'functionalities' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  groups = (): RootlyTeam[] => {\n    if (this.incident.relationships?.groups?.data) {\n      const ids = this.incident.relationships?.groups?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'groups' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  types = (): RootlyIncidentType[] => {\n    if (this.incident.relationships?.incident_types?.data) {\n      const ids = this.incident.relationships?.incident_types?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'incident_types' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n}\n"],"names":[],"mappings":"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"}