{"version":3,"file":"TeamsTable.esm.js","sources":["../../../src/components/TeamsTable/TeamsTable.tsx"],"sourcesContent":["import { parseEntityRef } from '@backstage/catalog-model';\nimport { Table, TableColumn } from '@backstage/core-components';\nimport { EntityRefLink } from '@backstage/plugin-catalog-react';\nimport { makeStyles, Tooltip } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { Alert } from '@material-ui/lab';\nimport React, { useCallback, useState } from 'react';\nimport { useAsync } from 'react-use';\n\nimport {\n  RootlyTeamsFetchOpts,\n  RootlyTeam,\n  RootlyApi,\n} from '@rootly/backstage-plugin-common';\nimport { useRootlyClient } from '../../api';\n\nimport { SearchBarBase } from '@backstage/plugin-search-react'; // Updated import\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: 850,\n  },\n  empty: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  searchContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst DEFAULT_PAGE_NUMBER = 1;\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport const TeamsTable = ({\n  organizationId,\n  params,\n}: {\n  organizationId?: string;\n  params?: RootlyTeamsFetchOpts;\n}) => {\n  const classes = useStyles();\n  const rootlyClient = useRootlyClient({organizationId: organizationId});\n\n  const smallColumnStyle = {\n    width: '5%',\n    maxWidth: '5%',\n  };\n  const mediumColumnStyle = {\n    width: '10%',\n    maxWidth: '10%',\n  };\n\n  const [page, setPage] = useState({\n    number: DEFAULT_PAGE_NUMBER,\n    size: DEFAULT_PAGE_SIZE,\n  });\n\n  const [searchTerm, setSearchTerm] = useState(''); // State for search term\n\n  const {\n    value: response,\n    loading,\n    error,\n  } = useAsync(\n    async () =>\n      await rootlyClient.getTeams({\n        ...params,\n        page: page,\n        filter: { search: searchTerm, ...params?.filter },\n      }),\n    [organizationId, page, searchTerm],\n  );\n\n  const nameColumn = useCallback((rowData: RootlyTeam) => {\n    return (\n      <Tooltip\n        title={\n          rowData.attributes.description?.substring(0, 255) ||\n          rowData.attributes.name\n        }\n      >\n        <Link target=\"blank\" href={RootlyApi.getTeamDetailsURL(rowData)}>\n          {rowData.attributes.name}\n        </Link>\n      </Tooltip>\n    );\n  }, []);\n\n  const backstageColumn = useCallback((rowData: RootlyTeam) => {\n    if (rowData.attributes.backstage_id) {\n      try {\n        const entityRef = parseEntityRef(rowData.attributes.backstage_id);\n        return <EntityRefLink entityRef={parseEntityRef(entityRef)} />;\n      } catch (e) {\n        return <div>N/A</div>;\n      }\n    }\n    return <div>N/A</div>;\n  }, []);\n\n  const columns: TableColumn<RootlyTeam>[] = [\n    {\n      title: 'Name',\n      field: 'name',\n      highlight: true,\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: nameColumn,\n    },\n    {\n      title: 'Backstage',\n      field: 'backstage',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: backstageColumn,\n    },\n    {\n      title: 'Incidents',\n      field: 'attributes.incidents_count',\n      type: 'numeric',\n      cellStyle: mediumColumnStyle,\n      headerStyle: mediumColumnStyle,\n    },\n    {\n      title: 'Updated At',\n      field: 'attributes.updated_at',\n      type: 'datetime',\n      dateSetting: { locale: 'en-US' },\n      cellStyle: mediumColumnStyle,\n      headerStyle: mediumColumnStyle,\n    },\n    {\n      title: 'Created At',\n      field: 'attributes.created_at',\n      type: 'datetime',\n      dateSetting: { locale: 'en-US' },\n      cellStyle: mediumColumnStyle,\n      headerStyle: mediumColumnStyle,\n    },\n  ];\n\n  if (error) {\n    return <Alert severity=\"error\">{error.message}</Alert>;\n  }\n\n  const data = response ? response.data : [];\n\n  return (\n    <>\n      <div className={classes.searchContainer}>\n        {/* Backstage SearchBar */}\n        <SearchBarBase\n          onChange={setSearchTerm} // Directly pass the search term to setSearchTerm\n          placeholder=\"Search Teams\"\n          value={searchTerm}\n        />\n      </div>\n      <Table\n        isLoading={loading}\n        options={{\n          sorting: true,\n          search: false,\n          paging: true,\n          actionsColumnIndex: -1,\n          pageSize: DEFAULT_PAGE_SIZE,\n          padding: 'dense',\n        }}\n        localization={{ header: { actions: undefined } }}\n        columns={columns}\n        data={data}\n        page={page.number - 1}\n        totalCount={response?.meta.total_count}\n        emptyContent={<div className={classes.empty}>No teams</div>}\n        onPageChange={pageIndex => setPage({ ...page, number: pageIndex + 1 })}\n        onRowsPerPageChange={rowsPerPage =>\n          setPage({ ...page, size: rowsPerPage })\n        }\n      />\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}