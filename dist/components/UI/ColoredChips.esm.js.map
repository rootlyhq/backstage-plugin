{"version":3,"file":"ColoredChips.esm.js","sources":["../../../src/components/UI/ColoredChips.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Chip } from '@material-ui/core';\nimport { useApi } from '@backstage/core-plugin-api';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  RootlyService,\n  RootlyFunctionality,\n  RootlyEnvironment,\n  RootlyIncidentType,\n  RootlyTeam,\n} from '@rootly/backstage-plugin-common';\nimport { ColoredChip } from './ColoredChip';\n\nexport const ColoredChips = ({\n  objects,\n}: {\n  objects:\n    | RootlyService[]\n    | RootlyFunctionality[]\n    | RootlyEnvironment[]\n    | RootlyIncidentType[]\n    | RootlyTeam[];\n}) => {\n  const navigate = useNavigate();\n  const catalogApi = useApi(catalogApiRef);\n\n  const [componentUrls, setComponentUrls] = useState<Record<string, string>>({});\n\n  // Fetch component URLs incrementally\n  useEffect(() => {\n    if (!objects?.length) return;\n\n    const fetchComponentUrl = async (entityRef: string) => {\n      try {\n        const component = await catalogApi.getEntityByRef(entityRef);\n        if (component) {\n          setComponentUrls(prev => ({\n            ...prev,\n            [entityRef]: `/catalog/${component.metadata.namespace}/component/${component.metadata.name}`,\n          }));\n        }\n      } catch {\n        // No op\n      }\n    };\n\n    // Fetch each entityRef independently\n    objects.forEach(obj => {\n      const entityRef = (obj.attributes as any).backstage_id;\n      if (entityRef) {\n        fetchComponentUrl(entityRef);\n      }\n    });\n  }, [objects, catalogApi]);\n\n  if (objects?.length > 0) {\n    return (\n      <>\n        {objects.map(r => {\n          const entityRef = (r.attributes as any).backstage_id;\n          const url = componentUrls[entityRef];\n          return (\n            <ColoredChip\n              key={r.id}\n              label={r.attributes.name}\n              tooltip={r.attributes.description}\n              color={r.attributes.color}\n              onClick={url ? () => navigate(url) : () => {}}\n              icon={url ? <LinkIcon /> : undefined}\n            />\n          );\n        })}\n      </>\n    );\n  }\n\n  return <Chip label=\"N/A\" size=\"small\" />;\n};\n"],"names":[],"mappings":";;;;;;;;AAeO,MAAM,eAAe,CAAC;AAAA,EAC3B;AACF,CAOM,KAAA;AACJ,EAAA,MAAM,WAAW,WAAY,EAAA;AAC7B,EAAM,MAAA,UAAA,GAAa,OAAO,aAAa,CAAA;AAEvC,EAAA,MAAM,CAAC,aAAe,EAAA,gBAAgB,CAAI,GAAA,QAAA,CAAiC,EAAE,CAAA;AAG7E,EAAA,SAAA,CAAU,MAAM;AACd,IAAI,IAAA,CAAC,SAAS,MAAQ,EAAA;AAEtB,IAAM,MAAA,iBAAA,GAAoB,OAAO,SAAsB,KAAA;AACrD,MAAI,IAAA;AACF,QAAA,MAAM,SAAY,GAAA,MAAM,UAAW,CAAA,cAAA,CAAe,SAAS,CAAA;AAC3D,QAAA,IAAI,SAAW,EAAA;AACb,UAAA,gBAAA,CAAiB,CAAS,IAAA,MAAA;AAAA,YACxB,GAAG,IAAA;AAAA,YACH,CAAC,SAAS,GAAG,CAAY,SAAA,EAAA,SAAA,CAAU,SAAS,SAAS,CAAA,WAAA,EAAc,SAAU,CAAA,QAAA,CAAS,IAAI,CAAA;AAAA,WAC1F,CAAA,CAAA;AAAA;AACJ,OACM,CAAA,MAAA;AAAA;AAER,KACF;AAGA,IAAA,OAAA,CAAQ,QAAQ,CAAO,GAAA,KAAA;AACrB,MAAM,MAAA,SAAA,GAAa,IAAI,UAAmB,CAAA,YAAA;AAC1C,MAAA,IAAI,SAAW,EAAA;AACb,QAAA,iBAAA,CAAkB,SAAS,CAAA;AAAA;AAC7B,KACD,CAAA;AAAA,GACA,EAAA,CAAC,OAAS,EAAA,UAAU,CAAC,CAAA;AAExB,EAAI,IAAA,OAAA,EAAS,SAAS,CAAG,EAAA;AACvB,IACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,OAAQ,CAAA,GAAA,CAAI,CAAK,CAAA,KAAA;AAChB,MAAM,MAAA,SAAA,GAAa,EAAE,UAAmB,CAAA,YAAA;AACxC,MAAM,MAAA,GAAA,GAAM,cAAc,SAAS,CAAA;AACnC,MACE,uBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,WAAA;AAAA,QAAA;AAAA,UACC,KAAK,CAAE,CAAA,EAAA;AAAA,UACP,KAAA,EAAO,EAAE,UAAW,CAAA,IAAA;AAAA,UACpB,OAAA,EAAS,EAAE,UAAW,CAAA,WAAA;AAAA,UACtB,KAAA,EAAO,EAAE,UAAW,CAAA,KAAA;AAAA,UACpB,SAAS,GAAM,GAAA,MAAM,QAAS,CAAA,GAAG,IAAI,MAAM;AAAA,WAAC;AAAA,UAC5C,IAAM,EAAA,GAAA,mBAAO,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAS,CAAK,GAAA,KAAA;AAAA;AAAA,OAC7B;AAAA,KAEH,CACH,CAAA;AAAA;AAIJ,EAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,KAAM,EAAA,KAAA,EAAM,MAAK,OAAQ,EAAA,CAAA;AACxC;;;;"}