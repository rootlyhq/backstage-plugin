{"version":3,"file":"ServicesTable.esm.js","sources":["../../../src/components/ServicesTable/ServicesTable.tsx"],"sourcesContent":["import { parseEntityRef } from '@backstage/catalog-model';\nimport { Table, TableColumn } from '@backstage/core-components';\nimport {\n  configApiRef,\n  discoveryApiRef,\n  identityApiRef,\n  useApi,\n} from '@backstage/core-plugin-api';\nimport { EntityRefLink } from '@backstage/plugin-catalog-react';\nimport { makeStyles, Tooltip } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { Alert } from '@material-ui/lab';\nimport React, { useCallback, useState } from 'react';\nimport { useAsync } from 'react-use';\n\nimport {\n  RootlyServicesFetchOpts,\n  RootlyService,\n  RootlyApi,\n} from '@rootly/backstage-plugin-common';\nimport { useRootlyClient } from '../../api';\n\nimport { SearchBarBase } from '@backstage/plugin-search-react'; // Updated import\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: 850,\n  },\n  empty: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  searchContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst DEFAULT_PAGE_NUMBER = 1;\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport const ServicesTable = ({\n  organizationId,\n  params,\n}: {\n  organizationId?: string;\n  params?: RootlyServicesFetchOpts;\n}) => {\n  const classes = useStyles();\n  const configApi = useApi(configApiRef);\n  const discoveryApi = useApi(discoveryApiRef);\n  const identifyApi = useApi(identityApiRef);\n  const rootlyClient = useRootlyClient({\n    discovery: discoveryApi,\n    identify: identifyApi,\n    config: configApi,\n    organizationId: organizationId,\n  });\n\n  const smallColumnStyle = {\n    width: '5%',\n    maxWidth: '5%',\n  };\n  const mediumColumnStyle = {\n    width: '10%',\n    maxWidth: '10%',\n  };\n\n  const [page, setPage] = useState({\n    number: DEFAULT_PAGE_NUMBER,\n    size: DEFAULT_PAGE_SIZE,\n  });\n\n  const [searchTerm, setSearchTerm] = useState(''); // State for search term\n\n  const {\n    value: response,\n    loading,\n    error,\n  } = useAsync(\n    async () =>\n      await rootlyClient.getServices({\n        ...params,\n        page: page,\n        filter: { search: searchTerm, ...params?.filter },\n      }),\n    [organizationId, page, searchTerm],\n  );\n\n  const nameColumn = useCallback((rowData: RootlyService) => {\n    return (\n      <Tooltip\n        title={\n          rowData.attributes.description?.substring(0, 255) ||\n          rowData.attributes.name\n        }\n      >\n        <Link target=\"blank\" href={RootlyApi.getServiceDetailsURL(rowData)}>\n          {rowData.attributes.name}\n        </Link>\n      </Tooltip>\n    );\n  }, []);\n\n  const backstageColumn = useCallback((rowData: RootlyService) => {\n    if (rowData.attributes.backstage_id) {\n      try {\n        const entityRef = parseEntityRef(rowData.attributes.backstage_id);\n        return <EntityRefLink entityRef={parseEntityRef(entityRef)} />;\n      } catch (e) {\n        return <div>N/A</div>;\n      }\n    }\n    return <div>N/A</div>;\n  }, []);\n\n  const columns: TableColumn<RootlyService>[] = [\n    {\n      title: 'Name',\n      field: 'name',\n      highlight: true,\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: nameColumn,\n    },\n    {\n      title: 'Backstage',\n      field: 'backstage',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: backstageColumn,\n    },\n    {\n      title: 'Incidents',\n      field: 'attributes.incidents_count',\n      type: 'numeric',\n      cellStyle: mediumColumnStyle,\n      headerStyle: mediumColumnStyle,\n    },\n    {\n      title: 'Updated At',\n      field: 'attributes.updated_at',\n      type: 'datetime',\n      dateSetting: { locale: 'en-US' },\n      cellStyle: mediumColumnStyle,\n      headerStyle: mediumColumnStyle,\n    },\n    {\n      title: 'Created At',\n      field: 'attributes.created_at',\n      type: 'datetime',\n      dateSetting: { locale: 'en-US' },\n      cellStyle: mediumColumnStyle,\n      headerStyle: mediumColumnStyle,\n    },\n  ];\n\n  if (error) {\n    return <Alert severity=\"error\">{error.message}</Alert>;\n  }\n\n  const data = response ? response.data : [];\n\n  return (\n    <>\n      <div className={classes.searchContainer}>\n        {/* Backstage SearchBar */}\n        <SearchBarBase\n          onChange={setSearchTerm} // Directly pass the search term to setSearchTerm\n          placeholder=\"Search Services\"\n          value={searchTerm}\n        />\n      </div>\n      <Table\n        isLoading={loading}\n        options={{\n          sorting: true,\n          search: false,\n          paging: true,\n          actionsColumnIndex: -1,\n          pageSize: DEFAULT_PAGE_SIZE,\n          padding: 'dense',\n        }}\n        localization={{ header: { actions: undefined } }}\n        columns={columns}\n        data={data}\n        page={page.number - 1}\n        totalCount={response?.meta.total_count}\n        emptyContent={<div className={classes.empty}>No services</div>}\n        onPageChange={pageIndex => setPage({ ...page, number: pageIndex + 1 })}\n        onRowsPerPageChange={rowsPerPage =>\n          setPage({ ...page, size: rowsPerPage })\n        }\n      />\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}