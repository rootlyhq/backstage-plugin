{"version":3,"file":"DefaultRootlyPageLayout.esm.js","sources":["../../../src/components/RootlyPage/DefaultRootlyPageLayout.tsx"],"sourcesContent":["import { TabProps } from '@material-ui/core';\nimport { Children, default as React, Fragment, isValidElement } from 'react';\n\nimport { attachComponentData } from '@backstage/core-plugin-api';\nimport { Header, Page, RoutedTabs } from '@backstage/core-components';\n\ntype SubRoute = {\n  path: string;\n  title: string;\n  children: JSX.Element;\n  tabProps?: TabProps<React.ElementType, { component?: React.ElementType }>;\n};\n\nconst Route: (props: SubRoute) => null = () => null;\n\n// This causes all mount points that are discovered within this route to use the path of the route itself\nattachComponentData(Route, 'core.gatherMountPoints', true);\n\nfunction createSubRoutesFromChildren(\n  childrenProps: React.ReactNode,\n): SubRoute[] {\n  // Directly comparing child.type with Route will not work with in\n  // combination with react-hot-loader in storybook\n  // https://github.com/gaearon/react-hot-loader/issues/304\n  const routeType = (\n    <Route path=\"\" title=\"\">\n      <div />\n    </Route>\n  ).type;\n\n  return Children.toArray(childrenProps).flatMap(child => {\n    if (!isValidElement(child)) {\n      return [];\n    }\n\n    if (child.type === Fragment) {\n      return createSubRoutesFromChildren(child.props.children);\n    }\n\n    if (child.type !== routeType) {\n      throw new Error('Child of ExploreLayout must be an ExploreLayout.Route');\n    }\n\n    const { path, title, children, tabProps } = child.props;\n    return [{ path, title, children, tabProps }];\n  });\n}\n\ntype LayoutProps = {\n  children?: React.ReactNode;\n};\n\nexport const DefaultRootlyPageLayout = ({ children }: LayoutProps) => {\n  const routes = createSubRoutesFromChildren(children);\n\n  return (\n    <Page themeId=\"tool\">\n      <Header title=\"Rootly\" />\n\n      <RoutedTabs routes={routes} />\n    </Page>\n  );\n};\n\nDefaultRootlyPageLayout.Route = Route;\n"],"names":[],"mappings":";;;;AAaA,MAAM,QAAmC,MAAM,IAAA;AAG/C,mBAAoB,CAAA,KAAA,EAAO,0BAA0B,IAAI,CAAA;AAEzD,SAAS,4BACP,aACY,EAAA;AAIZ,EAAM,MAAA,SAAA,GAAA,iBACH,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAM,IAAK,EAAA,EAAA,EAAG,OAAM,EACnB,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,KAAI,EAAA,IAAA,CACP,CACA,EAAA,IAAA;AAEF,EAAA,OAAO,QAAS,CAAA,OAAA,CAAQ,aAAa,CAAA,CAAE,QAAQ,CAAS,KAAA,KAAA;AACtD,IAAI,IAAA,CAAC,cAAe,CAAA,KAAK,CAAG,EAAA;AAC1B,MAAA,OAAO,EAAC;AAAA;AAGV,IAAI,IAAA,KAAA,CAAM,SAAS,QAAU,EAAA;AAC3B,MAAO,OAAA,2BAAA,CAA4B,KAAM,CAAA,KAAA,CAAM,QAAQ,CAAA;AAAA;AAGzD,IAAI,IAAA,KAAA,CAAM,SAAS,SAAW,EAAA;AAC5B,MAAM,MAAA,IAAI,MAAM,uDAAuD,CAAA;AAAA;AAGzE,IAAA,MAAM,EAAE,IAAM,EAAA,KAAA,EAAO,QAAU,EAAA,QAAA,KAAa,KAAM,CAAA,KAAA;AAClD,IAAA,OAAO,CAAC,EAAE,IAAA,EAAM,KAAO,EAAA,QAAA,EAAU,UAAU,CAAA;AAAA,GAC5C,CAAA;AACH;AAMO,MAAM,uBAA0B,GAAA,CAAC,EAAE,QAAA,EAA4B,KAAA;AACpE,EAAM,MAAA,MAAA,GAAS,4BAA4B,QAAQ,CAAA;AAEnD,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,OAAQ,EAAA,MAAA,EAAA,kBACX,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAO,KAAM,EAAA,QAAA,EAAS,CAEvB,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,MAAA,EAAgB,CAC9B,CAAA;AAEJ;AAEA,uBAAA,CAAwB,KAAQ,GAAA,KAAA;;;;"}