{"version":3,"file":"DefaultRootlyIncidentsPage.esm.js","sources":["../../../src/components/RootlyIncidentsPage/DefaultRootlyIncidentsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { RootlyServiceIncidentsPageLayout } from './RootlyServiceIncidentsPageLayout';\nimport { RootlyFunctionalityIncidentsPageLayout } from './RootlyFunctionalityIncidentsPageLayout';\nimport { RootlyTeamIncidentsPageLayout } from './RootlyTeamIncidentsPageLayout';\n\nimport { catalogApiRef, useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  ROOTLY_ANNOTATION_FUNCTIONALITY_ID,\n  ROOTLY_ANNOTATION_FUNCTIONALITY_SLUG,\n  ROOTLY_ANNOTATION_ORG_ID,\n  ROOTLY_ANNOTATION_SERVICE_ID,\n  ROOTLY_ANNOTATION_SERVICE_SLUG,\n  ROOTLY_ANNOTATION_TEAM_ID,\n  ROOTLY_ANNOTATION_TEAM_SLUG,\n  RootlyEntity,\n} from '@rootly/backstage-plugin-common';\nimport { Progress } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { RootlySystemIncidentsPageLayout } from './RootlySystemIncidentsPageLayout';\n\nexport const DefaultRootlyIncidentsPage = ({\n  organizationId,\n}: {\n  organizationId?: string;\n}) => {\n  const [entities, setEntities] = useState<RootlyEntity[]>([]);\n  const [isLoading, setIsLoading] = useState(true); // Track loading state\n  const { entity } = useEntity();\n  const rootlyEntity = entity as RootlyEntity;\n  const catalogApi = useApi(catalogApiRef); // Use the catalog API\n\n  useEffect(() => {\n    const fetchEntities = async () => {\n      if (entity.kind === 'System') {\n        const hasPartRelations = entity.relations?.filter(\n          relation => relation.type === 'hasPart',\n        );\n\n        if (hasPartRelations && hasPartRelations.length > 0) {\n          const entityPromises = hasPartRelations.map(async relation => {\n            const _entity = (await catalogApi.getEntityByRef(\n              relation.targetRef,\n            )) as RootlyEntity;\n            if (_entity && _entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]) {\n              _entity.rootlyKind = kindOf(_entity);\n              return _entity;\n            }\n            return null;\n          });\n\n          const fetchedEntities = (await Promise.all(entityPromises)).filter(\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            (entity): entity is RootlyEntity => entity !== null,\n          );\n\n          setEntities(fetchedEntities);\n        }\n      } else {\n        rootlyEntity.rootlyKind = kindOf(rootlyEntity);\n        setEntities([rootlyEntity]);\n      }\n\n      setIsLoading(false); // Fetching complete\n    };\n\n    fetchEntities();\n  }, [entity, rootlyEntity, catalogApi]);\n\n  if (isLoading) {\n    // Show progress bar while loading\n    return <Progress />;\n  }\n\n  if (entities.length === 1) {\n    return buildEntity(entities[0], organizationId);\n  } else if (entities.length > 1) {\n    return buildEntities(entities);\n  }\n\n  return <div>No Rootly annotations found</div>;\n};\n\nfunction kindOf(entity: RootlyEntity): string | undefined {\n  const service_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_SLUG];\n\n  const functionality_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_FUNCTIONALITY_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_FUNCTIONALITY_SLUG];\n\n  const team_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_TEAM_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_TEAM_SLUG];\n\n  if (service_id_annotation) {\n    return 'Service';\n  } else if (functionality_id_annotation) {\n    return 'Functionality';\n  } else if (team_id_annotation) {\n    return 'Team';\n  }\n  return undefined;\n}\n\nfunction buildEntities(entities: RootlyEntity[]) {\n  return <RootlySystemIncidentsPageLayout entities={entities} />;\n}\n\nfunction buildEntity(entity: RootlyEntity, organizationId?: string) {\n  const resource = () => {\n    if (entity.rootlyKind === 'Service') {\n      return (\n        <RootlyServiceIncidentsPageLayout\n          entity={entity}\n          organizationId={organizationId || entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]}\n        />\n      );\n    } else if (entity.rootlyKind === 'Functionality') {\n      return (\n        <RootlyFunctionalityIncidentsPageLayout\n          entity={entity}\n          organizationId={organizationId || entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]}\n        />\n      );\n    } else if (entity.rootlyKind === 'Team') {\n      return (\n        <RootlyTeamIncidentsPageLayout\n          entity={entity}\n          organizationId={organizationId || entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]}\n        />\n      );\n    }\n    return <div>No Rootly annotations found</div>;\n  };\n\n  return <div>{resource()}</div>;\n}\n"],"names":["entity"],"mappings":"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"}