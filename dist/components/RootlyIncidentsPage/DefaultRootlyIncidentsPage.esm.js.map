{"version":3,"file":"DefaultRootlyIncidentsPage.esm.js","sources":["../../../src/components/RootlyIncidentsPage/DefaultRootlyIncidentsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { RootlyServiceIncidentsPageLayout } from './RootlyServiceIncidentsPageLayout';\nimport { RootlyFunctionalityIncidentsPageLayout } from './RootlyFunctionalityIncidentsPageLayout';\nimport { RootlyTeamIncidentsPageLayout } from './RootlyTeamIncidentsPageLayout';\n\nimport { catalogApiRef, useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  ROOTLY_ANNOTATION_FUNCTIONALITY_ID,\n  ROOTLY_ANNOTATION_FUNCTIONALITY_SLUG,\n  ROOTLY_ANNOTATION_ORG_ID,\n  ROOTLY_ANNOTATION_SERVICE_ID,\n  ROOTLY_ANNOTATION_SERVICE_SLUG,\n  ROOTLY_ANNOTATION_TEAM_ID,\n  ROOTLY_ANNOTATION_TEAM_SLUG,\n  RootlyEntity,\n} from '@rootly/backstage-plugin-common';\nimport { Progress } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { RootlySystemIncidentsPageLayout } from './RootlySystemIncidentsPageLayout';\n\nexport const DefaultRootlyIncidentsPage = ({\n  organizationId,\n}: {\n  organizationId?: string;\n}) => {\n  const [entities, setEntities] = useState<RootlyEntity[]>([]);\n  const [isLoading, setIsLoading] = useState(true); // Track loading state\n  const { entity } = useEntity();\n  const rootlyEntity = entity as RootlyEntity;\n  const catalogApi = useApi(catalogApiRef); // Use the catalog API\n\n  useEffect(() => {\n    const fetchEntities = async () => {\n      if (entity.kind === 'System') {\n        const hasPartRelations = entity.relations?.filter(\n          relation => relation.type === 'hasPart',\n        );\n\n        if (hasPartRelations && hasPartRelations.length > 0) {\n          const entityPromises = hasPartRelations.map(async relation => {\n            const _entity = (await catalogApi.getEntityByRef(\n              relation.targetRef,\n            )) as RootlyEntity;\n            if (_entity && _entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]) {\n              _entity.rootlyKind = kindOf(_entity);\n              return _entity;\n            }\n            return null;\n          });\n\n          const fetchedEntities = (await Promise.all(entityPromises)).filter(\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            (entity): entity is RootlyEntity => entity !== null,\n          );\n\n          setEntities(fetchedEntities);\n        }\n      } else {\n        rootlyEntity.rootlyKind = kindOf(rootlyEntity);\n        setEntities([rootlyEntity]);\n      }\n\n      setIsLoading(false); // Fetching complete\n    };\n\n    fetchEntities();\n  }, [entity, rootlyEntity, catalogApi]);\n\n  if (isLoading) {\n    // Show progress bar while loading\n    return <Progress />;\n  }\n\n  if (entities.length === 1) {\n    return buildEntity(entities[0], organizationId);\n  } else if (entities.length > 1) {\n    return buildEntities(entities);\n  }\n\n  return <div>No Rootly annotations found</div>;\n};\n\nfunction kindOf(entity: RootlyEntity): string | undefined {\n  const service_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_SLUG];\n\n  const functionality_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_FUNCTIONALITY_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_FUNCTIONALITY_SLUG];\n\n  const team_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_TEAM_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_TEAM_SLUG];\n\n  if (service_id_annotation) {\n    return 'Service';\n  } else if (functionality_id_annotation) {\n    return 'Functionality';\n  } else if (team_id_annotation) {\n    return 'Team';\n  }\n  return undefined;\n}\n\nfunction buildEntities(entities: RootlyEntity[]) {\n  return <RootlySystemIncidentsPageLayout entities={entities} />;\n}\n\nfunction buildEntity(entity: RootlyEntity, organizationId?: string) {\n  const resource = () => {\n    if (entity.rootlyKind === 'Service') {\n      return (\n        <RootlyServiceIncidentsPageLayout\n          entity={entity}\n          organizationId={organizationId || entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]}\n        />\n      );\n    } else if (entity.rootlyKind === 'Functionality') {\n      return (\n        <RootlyFunctionalityIncidentsPageLayout\n          entity={entity}\n          organizationId={organizationId || entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]}\n        />\n      );\n    } else if (entity.rootlyKind === 'Team') {\n      return (\n        <RootlyTeamIncidentsPageLayout\n          entity={entity}\n          organizationId={organizationId || entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]}\n        />\n      );\n    }\n    return <div>No Rootly annotations found</div>;\n  };\n\n  return <div>{resource()}</div>;\n}\n"],"names":["entity"],"mappings":"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"}