{"version":3,"file":"IncidentsTable.esm.js","sources":["../../../src/components/IncidentsTable/IncidentsTable.tsx"],"sourcesContent":["import { Table, TableColumn } from '@backstage/core-components';\nimport {\n  configApiRef,\n  discoveryApiRef,\n  identityApiRef,\n  useApi,\n} from '@backstage/core-plugin-api';\nimport { Chip, makeStyles, Tooltip } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { Alert } from '@material-ui/lab';\nimport React, { useState } from 'react';\nimport { useAsync } from 'react-use';\nimport { IncidentWrapper } from '../Incident';\nimport { ColoredChip } from '../UI/ColoredChip';\nimport { ColoredChips } from '../UI/ColoredChips';\nimport { StatusChip } from '../UI/StatusChip';\n\nimport {\n  RootlyIncident,\n  RootlyIncidentsFetchOpts,\n} from '@rootly/backstage-plugin-common';\nimport { useRootlyClient } from '../../api';\n\nimport {\n  SearchBarBase,\n} from '@backstage/plugin-search-react'; // Updated import\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: 850,\n  },\n  empty: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  searchContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst DEFAULT_PAGE_NUMBER = 1;\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport const IncidentsTable = ({\n  organizationId,\n  params,\n}: {\n  organizationId?: string;\n  params?: RootlyIncidentsFetchOpts;\n}) => {\n  const classes = useStyles();\n  const configApi = useApi(configApiRef);\n  const discoveryApi = useApi(discoveryApiRef);\n  const identifyApi = useApi(identityApiRef);\n  const rootlyClient = useRootlyClient({\n    discovery: discoveryApi,\n    identify: identifyApi,\n    config: configApi,\n    organizationId: organizationId,\n  });\n\n  const smallColumnStyle = {\n    width: '5%',\n    maxWidth: '5%',\n  };\n  const mediumColumnStyle = {\n    width: '10%',\n    maxWidth: '10%',\n  };\n\n  const [page, setPage] = useState({\n    number: DEFAULT_PAGE_NUMBER,\n    size: DEFAULT_PAGE_SIZE,\n  });\n\n  const [searchTerm, setSearchTerm] = useState(''); // State for search term\n\n  const {\n    value: response,\n    loading,\n    error,\n  } = useAsync(\n    async () =>\n      await rootlyClient.getIncidents({\n        ...params,\n        page: page,\n        filter: { search: searchTerm, ...params?.filter },\n      }), // Pass search term to API\n    [organizationId, page, searchTerm],\n  );\n\n  const columns: TableColumn<IncidentWrapper>[] = [\n    {\n      title: 'Started At',\n      field: 'incident.attributes.started_at',\n      type: 'datetime',\n      dateSetting: { locale: 'en-US' },\n      cellStyle: mediumColumnStyle,\n      headerStyle: mediumColumnStyle,\n    },\n    {\n      title: 'Title',\n      field: 'title',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: rowData => (\n        <Tooltip\n          title={\n            rowData.incident.attributes.summary?.substring(0, 255) ||\n            rowData.incident.attributes.title\n          }\n        >\n          <Link target=\"_blank\" href={rowData.incident.attributes.url}>\n            {rowData.incident.attributes.title}\n          </Link>\n        </Tooltip>\n      ),\n    },\n    {\n      title: 'Started By',\n      field: 'user.full_name',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: rowData => (\n        <Chip\n          label={rowData.incident.attributes.user?.data.attributes.full_name}\n          size=\"small\"\n        />\n      ),\n    },\n    {\n      title: 'Status',\n      field: 'status',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: rowData => (\n        <StatusChip status={rowData.incident.attributes.status} />\n      ),\n    },\n    {\n      title: 'Severity',\n      field: 'severity',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: rowData => (\n        <ColoredChip\n          label={rowData.incident.attributes.severity?.data.attributes.name}\n          tooltip={\n            rowData.incident.attributes.severity?.data.attributes.description\n          }\n          color={rowData.incident.attributes.severity?.data.attributes.color}\n        />\n      ),\n    },\n    {\n      title: 'Environments',\n      field: 'environments',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: rowData => <ColoredChips objects={rowData.environments()} />,\n    },\n    {\n      title: 'Services',\n      field: 'services',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: rowData => <ColoredChips objects={rowData.services()} />,\n    },\n    {\n      title: 'Functionalities',\n      field: 'functionalities',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: rowData => <ColoredChips objects={rowData.functionalities()} />,\n    },\n    {\n      title: 'Teams',\n      field: 'teams',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: rowData => <ColoredChips objects={rowData.groups()} />,\n    },\n  ];\n\n  if (error) {\n    return <Alert severity=\"error\">{error.message}</Alert>;\n  }\n\n  const data = response\n    ? response.data.map((i: RootlyIncident) => {\n        return new IncidentWrapper(i, response.included);\n      })\n    : [];\n\n  return (\n    <>\n      <div className={classes.searchContainer}>\n        {/* Backstage SearchBar */}\n        <SearchBarBase\n          onChange={setSearchTerm} // Directly pass the search term to setSearchTerm\n          placeholder=\"Search Incidents\"\n          value={searchTerm}\n        />\n      </div>\n      <Table\n        isLoading={loading}\n        options={{\n          sorting: true,\n          search: false, // Disabling built-in search as we are doing a custom search\n          paging: true,\n          actionsColumnIndex: -1,\n          pageSize: DEFAULT_PAGE_SIZE,\n          padding: 'dense',\n        }}\n        localization={{ header: { actions: undefined } }}\n        columns={columns}\n        data={data}\n        page={page.number - 1}\n        totalCount={response?.meta.total_count}\n        emptyContent={<div className={classes.empty}>No incidents</div>}\n        onPageChange={pageIndex => setPage({ ...page, number: pageIndex + 1 })}\n        onRowsPerPageChange={rowsPerPage =>\n          setPage({ ...page, size: rowsPerPage })\n        }\n      />\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}